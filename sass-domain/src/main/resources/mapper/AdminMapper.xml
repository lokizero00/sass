<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loki.sass.domain.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="com.loki.sass.domain.model.Admin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="is_super" jdbcType="INTEGER" property="isSuper" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="zone_id" jdbcType="INTEGER" property="zoneId" />
    <result column="property_id" jdbcType="INTEGER" property="propertyId" />
  </resultMap>
  <resultMap id="QueryResultMap" type="com.loki.sass.domain.po.AdminPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="is_super" jdbcType="INTEGER" property="isSuper" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="create_by_name" jdbcType="VARCHAR" property="createByName" />
    <result column="update_by_name" jdbcType="VARCHAR" property="updateByName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="zone_id" jdbcType="INTEGER" property="zoneId" />
    <result column="property_id" jdbcType="INTEGER" property="propertyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, real_name, avatar_url, mobile, password, salt, is_super, state, create_by, 
    update_by, create_time, update_time, is_deleted, zone_id, property_id
  </sql>
  <select id="selectByExample" parameterType="com.loki.sass.domain.model.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <where>
      is_deleted = 0
    </where>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="offset != null &amp;&amp; limit != null">
      limit ${offset},${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.loki.sass.domain.model.AdminExample">
    delete from admin
    <where>
      is_deleted = 0
    </where>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.loki.sass.domain.model.Admin" useGeneratedKeys="true">
    insert into admin (user_name, real_name, avatar_url, 
      mobile, password, salt, 
      is_super, state, create_by, 
      update_by, create_time, update_time, 
      is_deleted, zone_id, property_id
      )
    values (#{userName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{isSuper,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{createBy,jdbcType=INTEGER}, 
      #{updateBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER}, #{zoneId,jdbcType=INTEGER}, #{propertyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.loki.sass.domain.model.Admin" useGeneratedKeys="true">
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="isSuper != null">
        is_super,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="zoneId != null">
        zone_id,
      </if>
      <if test="propertyId != null">
        property_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="isSuper != null">
        #{isSuper,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="zoneId != null">
        #{zoneId,jdbcType=INTEGER},
      </if>
      <if test="propertyId != null">
        #{propertyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loki.sass.domain.model.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <where>
      is_deleted = 0
    </where>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.isSuper != null">
        is_super = #{record.isSuper,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
      <if test="record.zoneId != null">
        zone_id = #{record.zoneId,jdbcType=INTEGER},
      </if>
      <if test="record.propertyId != null">
        property_id = #{record.propertyId,jdbcType=INTEGER},
      </if>
    </set>
    <where>
      is_deleted = 0
    </where>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      is_super = #{record.isSuper,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_by = #{record.createBy,jdbcType=INTEGER},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      zone_id = #{record.zoneId,jdbcType=INTEGER},
      property_id = #{record.propertyId,jdbcType=INTEGER}
    <where>
      is_deleted = 0
    </where>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loki.sass.domain.model.Admin">
    update admin
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="isSuper != null">
        is_super = #{isSuper,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="zoneId != null">
        zone_id = #{zoneId,jdbcType=INTEGER},
      </if>
      <if test="propertyId != null">
        property_id = #{propertyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loki.sass.domain.model.Admin">
    update admin
    set user_name = #{userName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      is_super = #{isSuper,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=INTEGER},
      update_by = #{updateBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      zone_id = #{zoneId,jdbcType=INTEGER},
      property_id = #{propertyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER} and is_deleted = 0
  </update>

  <select id="selectByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from admin
    where is_deleted = 0 and mobile = #{mobile,jdbcType=VARCHAR}
  </select>

  <select id="selectByParam" parameterType="com.loki.sass.common.vo.AdminQueryVO" resultMap="QueryResultMap">
    select aa.*,ac.real_name as create_by_name,au.real_name as update_by_name
    from admin aa
    left join admin ac on ac.id=aa.create_by
    left join admin au on au.id=aa.update_by
    <where>
      aa.is_deleted=0
      <if test="username!=null and username!=''">
        and aa.user_name like CONCAT('%',#{username},'%')
      </if>
      <if test="createByName!=null and createByName!=''">
        and ac.real_name like CONCAT('%',#{createByName},'%')
      </if>
      <if test="updateByName!=null and updateByName!=''">
        and au.real_name like CONCAT('%',#{updateByName},'%')
      </if>
      <if test="state!=null and state!=0">
        and aa.state=#{state}
      </if>
      <if test="zoneId!=null and zoneId!=0">
        and aa.zone_id=#{zoneId}
      </if>
      <if test="propertyId!=null and propertyId!=0">
        and aa.property_id=#{propertyId}
      </if>
    </where>
  </select>

  <select id="checkName" parameterType="String" resultType="Integer">
    select count(id) from admin where is_deleted = 0 and user_name=#{username}
  </select>

  <select id="checkExist" parameterType="Integer" resultType="Boolean">
    <![CDATA[ select count(1) from admin where is_deleted = 0 and id=#{id}]]>
  </select>

  <select id="count" parameterType="Integer" resultType="Integer">
    select count(id) from admin where is_deleted = 0 and id=#{id}
  </select>

</mapper>