<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loki.sass.domain.mapper.AccountJournalMapper">
  <resultMap id="BaseResultMap" type="com.loki.sass.domain.model.AccountJournal">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
    <result column="inner_busi_no" jdbcType="VARCHAR" property="innerBusiNo" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="op_time" jdbcType="TIMESTAMP" property="opTime" />
    <result column="third_channel" jdbcType="INTEGER" property="thirdChannel" />
    <result column="third_trans_no" jdbcType="VARCHAR" property="thirdTransNo" />
    <result column="third_receipt_time" jdbcType="TIMESTAMP" property="thirdReceiptTime" />
    <result column="third_receipt_amount" jdbcType="DECIMAL" property="thirdReceiptAmount" />
    <result column="need_third_confirm" jdbcType="INTEGER" property="needThirdConfirm" />
    <result column="response_content" jdbcType="VARCHAR" property="responseContent" />
    <result column="out_request_no" jdbcType="VARCHAR" property="outRequestNo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, account_id, inner_busi_no, amount, state, op_time, third_channel, third_trans_no, 
    third_receipt_time, third_receipt_amount, need_third_confirm, response_content, out_request_no
  </sql>
  <select id="selectByExample" parameterType="com.loki.sass.domain.model.AccountJournalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account_journal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_journal
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_journal
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.loki.sass.domain.model.AccountJournalExample">
    delete from account_journal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.loki.sass.domain.model.AccountJournal" useGeneratedKeys="true">
    insert into account_journal (type, account_id, inner_busi_no, 
      amount, state, op_time, 
      third_channel, third_trans_no, third_receipt_time, 
      third_receipt_amount, need_third_confirm, response_content, 
      out_request_no)
    values (#{type,jdbcType=INTEGER}, #{accountId,jdbcType=INTEGER}, #{innerBusiNo,jdbcType=VARCHAR}, 
      #{amount,jdbcType=DECIMAL}, #{state,jdbcType=VARCHAR}, #{opTime,jdbcType=TIMESTAMP}, 
      #{thirdChannel,jdbcType=INTEGER}, #{thirdTransNo,jdbcType=VARCHAR}, #{thirdReceiptTime,jdbcType=TIMESTAMP}, 
      #{thirdReceiptAmount,jdbcType=DECIMAL}, #{needThirdConfirm,jdbcType=INTEGER}, #{responseContent,jdbcType=VARCHAR}, 
      #{outRequestNo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.loki.sass.domain.model.AccountJournal" useGeneratedKeys="true">
    insert into account_journal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
      <if test="innerBusiNo != null">
        inner_busi_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="opTime != null">
        op_time,
      </if>
      <if test="thirdChannel != null">
        third_channel,
      </if>
      <if test="thirdTransNo != null">
        third_trans_no,
      </if>
      <if test="thirdReceiptTime != null">
        third_receipt_time,
      </if>
      <if test="thirdReceiptAmount != null">
        third_receipt_amount,
      </if>
      <if test="needThirdConfirm != null">
        need_third_confirm,
      </if>
      <if test="responseContent != null">
        response_content,
      </if>
      <if test="outRequestNo != null">
        out_request_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="innerBusiNo != null">
        #{innerBusiNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdChannel != null">
        #{thirdChannel,jdbcType=INTEGER},
      </if>
      <if test="thirdTransNo != null">
        #{thirdTransNo,jdbcType=VARCHAR},
      </if>
      <if test="thirdReceiptTime != null">
        #{thirdReceiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdReceiptAmount != null">
        #{thirdReceiptAmount,jdbcType=DECIMAL},
      </if>
      <if test="needThirdConfirm != null">
        #{needThirdConfirm,jdbcType=INTEGER},
      </if>
      <if test="responseContent != null">
        #{responseContent,jdbcType=VARCHAR},
      </if>
      <if test="outRequestNo != null">
        #{outRequestNo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loki.sass.domain.model.AccountJournalExample" resultType="java.lang.Long">
    select count(*) from account_journal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update account_journal
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
      <if test="record.innerBusiNo != null">
        inner_busi_no = #{record.innerBusiNo,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.opTime != null">
        op_time = #{record.opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.thirdChannel != null">
        third_channel = #{record.thirdChannel,jdbcType=INTEGER},
      </if>
      <if test="record.thirdTransNo != null">
        third_trans_no = #{record.thirdTransNo,jdbcType=VARCHAR},
      </if>
      <if test="record.thirdReceiptTime != null">
        third_receipt_time = #{record.thirdReceiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.thirdReceiptAmount != null">
        third_receipt_amount = #{record.thirdReceiptAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.needThirdConfirm != null">
        need_third_confirm = #{record.needThirdConfirm,jdbcType=INTEGER},
      </if>
      <if test="record.responseContent != null">
        response_content = #{record.responseContent,jdbcType=VARCHAR},
      </if>
      <if test="record.outRequestNo != null">
        out_request_no = #{record.outRequestNo,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account_journal
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER},
      inner_busi_no = #{record.innerBusiNo,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=VARCHAR},
      op_time = #{record.opTime,jdbcType=TIMESTAMP},
      third_channel = #{record.thirdChannel,jdbcType=INTEGER},
      third_trans_no = #{record.thirdTransNo,jdbcType=VARCHAR},
      third_receipt_time = #{record.thirdReceiptTime,jdbcType=TIMESTAMP},
      third_receipt_amount = #{record.thirdReceiptAmount,jdbcType=DECIMAL},
      need_third_confirm = #{record.needThirdConfirm,jdbcType=INTEGER},
      response_content = #{record.responseContent,jdbcType=VARCHAR},
      out_request_no = #{record.outRequestNo,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loki.sass.domain.model.AccountJournal">
    update account_journal
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="innerBusiNo != null">
        inner_busi_no = #{innerBusiNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="opTime != null">
        op_time = #{opTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdChannel != null">
        third_channel = #{thirdChannel,jdbcType=INTEGER},
      </if>
      <if test="thirdTransNo != null">
        third_trans_no = #{thirdTransNo,jdbcType=VARCHAR},
      </if>
      <if test="thirdReceiptTime != null">
        third_receipt_time = #{thirdReceiptTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thirdReceiptAmount != null">
        third_receipt_amount = #{thirdReceiptAmount,jdbcType=DECIMAL},
      </if>
      <if test="needThirdConfirm != null">
        need_third_confirm = #{needThirdConfirm,jdbcType=INTEGER},
      </if>
      <if test="responseContent != null">
        response_content = #{responseContent,jdbcType=VARCHAR},
      </if>
      <if test="outRequestNo != null">
        out_request_no = #{outRequestNo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loki.sass.domain.model.AccountJournal">
    update account_journal
    set type = #{type,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER},
      inner_busi_no = #{innerBusiNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      state = #{state,jdbcType=VARCHAR},
      op_time = #{opTime,jdbcType=TIMESTAMP},
      third_channel = #{thirdChannel,jdbcType=INTEGER},
      third_trans_no = #{thirdTransNo,jdbcType=VARCHAR},
      third_receipt_time = #{thirdReceiptTime,jdbcType=TIMESTAMP},
      third_receipt_amount = #{thirdReceiptAmount,jdbcType=DECIMAL},
      need_third_confirm = #{needThirdConfirm,jdbcType=INTEGER},
      response_content = #{responseContent,jdbcType=VARCHAR},
      out_request_no = #{outRequestNo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>