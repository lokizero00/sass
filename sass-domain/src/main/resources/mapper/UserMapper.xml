<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.loki.sass.domain.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.loki.sass.domain.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="registry_time" jdbcType="TIMESTAMP" property="registryTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <resultMap id="UserDetailResultMap" type="com.loki.sass.domain.po.UserDetailPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="registry_time" jdbcType="TIMESTAMP" property="registryTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="real_name" jdbcType="VARCHAR" property="realName"/>
  </resultMap>
  <resultMap id="UserDoorResultMap" type="com.loki.sass.domain.po.UserDoorPO">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="doorCode" jdbcType="VARCHAR" property="doorCode"/>
    <result column="doorName" jdbcType="VARCHAR" property="doorName"/>
    <result column="userMobile" jdbcType="VARCHAR" property="userMobile"/>
    <result column="type" jdbcType="INTEGER" property="type"/>
  </resultMap>
  <resultMap id="UserRegionResultMap" type="com.loki.sass.domain.po.UserRegionPO">
    <result column="id" jdbcType="INTEGER" property="id"/>
    <result column="regionName" jdbcType="VARCHAR" property="regionName"/>
    <result column="userMobile" jdbcType="VARCHAR" property="userMobile"/>
    <result column="userName" jdbcType="VARCHAR" property="userName"/>
    <result column="zoneName" jdbcType="VARCHAR" property="zoneName"/>
    <result column="propertyName" jdbcType="VARCHAR" property="propertyName"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, mobile, password, nick_name, avatar_url, type, registry_time, state
  </sql>
  <select id="selectByExample" parameterType="com.loki.sass.domain.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.loki.sass.domain.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.loki.sass.domain.model.User" useGeneratedKeys="true">
    insert into user (mobile, password, nick_name, 
      avatar_url, type, registry_time, 
      state)
    values (#{mobile,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{avatarUrl,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{registryTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.loki.sass.domain.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mobile != null">
        mobile,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="avatarUrl != null">
        avatar_url,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="registryTime != null">
        registry_time,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="registryTime != null">
        #{registryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loki.sass.domain.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatarUrl != null">
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.registryTime != null">
        registry_time = #{record.registryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      registry_time = #{record.registryTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loki.sass.domain.model.User">
    update user
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatarUrl != null">
        avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="registryTime != null">
        registry_time = #{registryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loki.sass.domain.model.User">
    update user
    set mobile = #{mobile,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      avatar_url = #{avatarUrl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      registry_time = #{registryTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByMobile" parameterType="String" resultMap="BaseResultMap">
    select * from user u where mobile=#{mobile}
  </select>

  <select id="findUserDetailByParam" resultMap="UserDetailResultMap">
    select u.*,ua.real_name as real_name
    from user u
    left join user_auth ua on u.id = ua.user_id
    <where>
      <if test="userMobile!=null and userMobile!=''">
        and u.mobile like CONCAT('%',#{userMobile},'%')
      </if>
      <if test="userNickName!=null and userNickName!=''">
        and u.nick_name like CONCAT('%',#{userNickName},'%')
      </if>
      <if test="state!=null and state!=''">
        and u.state = #{state}
      </if>
      <if test="userRealName!=null and userRealName!=''">
        and u.real_name like CONCAT('%',#{userRealName},'%')
      </if>
      <if test="zoneId!=null and zoneId!=0">
        and r.zone_id=#{zoneId}
      </if>
      <if test="propertyId!=null and propertyId!=0">
        and r.property_id=#{propertyId}
      </if>
    </where>
  </select>

  <select id="findUserDoorByParam" resultMap="UserDoorResultMap">
    select u.id as id,u.mobile as userMobile,u.nick_name as userName,u.type as type,d.code as doorCode,d.name as doorName
    from user u
    left join door_record dr on u.id = dr.user_id
    left join door d on d.id = dr.door_id
    <where>
      <if test="doorName!=null and doorName!=''">
        and d.name like CONCAT('%',#{doorName},'%')
      </if>
      <if test="userMobile!=null and userMobile!=''">
        and u.mobile like CONCAT('%',#{userMobile},'%')
      </if>
      <if test="userName!=null and userName!=''">
        and u.name = #{userName}
      </if>
      <if test="isPermanent!=null">
        <if test="isPermanent==true">
            and u.type = 2
        </if>
        <if test="isPermanent==false">
            and u.type = 3
        </if>
      </if>
      <if test="zoneId!=null and zoneId!=0">
        and r.zone_id=#{zoneId}
      </if>
      <if test="propertyId!=null and propertyId!=0">
        and r.property_id=#{propertyId}
      </if>
    </where>
  </select>

  <select id="findUserRegionByParam" resultMap="UserRegionResultMap">
    select u.id as id,u.mobile as userMobile,u.nick_name as userName,r.name as regionName,z.name as zoneName,p.name as propertyName
    from user u
    left join user_region ur on u.id = ur.user_id
    left join region r on ur.region_id = r.id
    left join zone z on r.zone_id = z.id
    left join property p on r.property_id = p.id
    <where>
      <if test="regionName!=null and regionName!=''">
        and r.name like CONCAT('%',#{regionName},'%')
      </if>
      <if test="userMobile!=null and userMobile!=''">
        and u.mobile like CONCAT('%',#{userMobile},'%')
      </if>
      <if test="userName!=null and userName!=''">
        and u.name = #{userName}
      </if>
      <if test="zoneId!=null and zoneId!=0">
        and r.zone_id=#{zoneId}
      </if>
      <if test="propertyId!=null and propertyId!=0">
        and r.property_id=#{propertyId}
      </if>
    </where>
  </select>

</mapper>